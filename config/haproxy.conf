#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2 debug

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        root
    group       root
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    tcp
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#-------------------------
# postgresql db frontend #
#-------------------------
frontend  bdd_frontend *:5432
    bind 192.168.100.8:5432
    use_backend bdd_backend

#-------------------------
# nodejs server frontend #
#-------------------------
frontend server_frontend *:80
    bind 192.168.100.16:80
    use_backend server_backend

#----------------------
# nodejs api frontend #
#----------------------
frontend api_frontend *:8080
    bind 192.168.100.20:8080
    use_backend api_backend

#----------------------
# nodejs api websocket #
#----------------------
frontend ws_frontend *:9091
    bind 192.168.100.20:9091
    use_backend ws_backend

#------------------------
# nodejs notif frontend #
#------------------------
frontend notif_frontend *:9090
    bind 192.168.100.21:9090
    use_backend notif_backend
	
#------------------------
# postgresql db backend #
#------------------------
backend bdd_backend
    server  bdd-1 192.168.100.6:5432 check
    server  bdd-2 192.168.100.7:5432 check backup

#------------------------
# nodejs server backend #
#------------------------
backend server_backend
    mode http
    balance roundrobin
    server back-1 192.168.100.14:80 check
    server back-2 192.168.100.15:80 check

#---------------------
# nodejs api backend #
#---------------------
backend api_backend
    mode http
    balance roundrobin
    server back-1 192.168.100.14:8080 check
    server back-2 192.168.100.15:8080 check

#---------------------
# nodejs api backend
#---------------------
backend ws_backend
    balance roundrobin
    server back-1 192.168.100.14:9091 check
    server back-2 192.168.100.15:9091 check

#-----------------------
# nodejs notif backend #
#-----------------------
backend notif_backend
    mode http
    balance roundrobin
    server back-1 192.168.100.14:9090 check
    server back-2 192.168.100.15:9090 check
	
#---------------------
# rabbitmq interface #
#---------------------
listen rabbitmq-cluster
    bind 192.168.100.19:5672
    mode tcp
    option tcpka
    option redispatch
    balance roundrobin
    server rmq-1 192.168.100.17:5672 check inter 5000 downinter 500
    server rmq-2 192.168.100.18:5672 check inter 5000 downinter 500

#------------------------
# listen stat interface #
#------------------------
listen stats # Define a listen section called "stats"
    bind :9000 # Listen on localhost:9000
    mode http
    stats enable  # Enable stats page
    stats realm Haproxy\ Statistics  # Title text for popup window
    stats uri /haproxy_stats  # Stats URI
    stats auth root:undefined  # Authentication credentials
